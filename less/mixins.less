// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// COMPONENT MIXINS
// --------------------------------------------------

// Alerts - Overrides Twitter Bootstrap's mixin
// -------------------------
// TODO: Review this when Bootstrap moves to Less 4 to see if using the same mixin name still causes duplicated CSS
// .alert-variant(@background, @border, @text-color) {
.alert-variant-todc(@background, @border, @text-color) {
  background-color: @background;
  border-color: @border;
  color: @text-color;
  hr {
    border-top-color: darken(@border, 5%);
  }
  .alert-link {
    color: darken(@text-color, 15%);
  }
}

// Button states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
.btn-states(@start-color, @end-color, @color: #fff, @border-color: @btn-default-border) {
  border: 1px solid @border-color;
  color: @color;
  #gradient > .vertical(@start-color: @start-color, @end-color: @end-color);
  .reset-filter();
  text-shadow: 0 1px rgba(0, 0, 0, 0.1);

  &:hover {
    text-shadow: 0 1px rgba(0, 0, 0, 0.3);
    .box-shadow(0 1px 1px rgba(0, 0, 0, 0.2));
  }

  // in these cases the gradient won't cover the background, so we override
  &:hover,
  &:focus,
  &:active,
  &.active {
    border: 1px solid darken(@border-color, 5%);
    color: @color;
    #gradient > .vertical(@start-color: @start-color, @end-color: darken(@end-color, 5%));
    .reset-filter();
    background-color: darken(@end-color, 5%);
    background-color: darken(@end-color, 5%) e("\9");
  }

  &:active,
  &.active {
    border: 1px solid darken(@border-color, 10%);
    text-shadow: 0 1px rgba(0, 0, 0, 0.3);
    #gradient > .vertical(@start-color: @start-color, @end-color: darken(@end-color, 10%));
    .reset-filter();
    .box-shadow(inset 0 1px 2px rgba(0, 0, 0, 0.3));
  }

  &:focus {
    border: 1px solid @border-color;
    .box-shadow(inset 0 0 0 1px #fff);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      border: 1px solid @border-color;
      #gradient > .vertical(@start-color: @start-color, @end-color: @end-color);
      .reset-filter();
      background-color: @start-color;
      background-color: @start-color e("\9");
      .box-shadow(none)
    }
  }
}

// Navbar vertical align - Overrides Twitter Bootstrap's mixin
// -------------------------
// Vertically center elements in the navbar or other bars.
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.
// Example: an element has a height of 30px and you want to vertically center it in a bar other than the navbar:
//          .navbar-vertical-align(32px, @navbar-toolbar-height);
.navbar-vertical-align(@element-height, @bar-height: @navbar-height) {
  // margin-top: (@bar-height - @element-height) / 2;
  margin-top: ((@bar-height - @element-height) / 2);
  margin-bottom: ((@bar-height - @element-height) / 2);
}



// Framework mixins
// --------------------------------------------------

// Override Twitter Bootstrap's formFieldState mixin
// Generate form validation states
.form-field-validation(@text-color: #555, @border-color: #ccc, @background-color: #f5f5f5) {
  // Color the label text
  .help-block,
  .control-label {
    color: @text-color;
  }
  // Set the border and box shadow on specific inputs to match
  .input-with-feedback {
    padding-right: 32px; // to account for the feedback icon
    border-color: @border-color;
    .box-shadow(none);
    &:hover {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.1) inset);
    }
    &:focus {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.3) inset);
    }
  }
  // Set validation states also for addons
  .input-group-addon {
    color: @text-color;
    border-color: @border-color;
    background-color: @background-color;
  }
}
